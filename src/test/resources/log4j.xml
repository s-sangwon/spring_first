<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<!-- 파일에 로그 메세지 저장하는 appender -->
	<appender name="fileLogger" class="org.apache.log4j.DailyRollingFileApender"> 
		<param name="file" value="C:\\framework_workspace\\first\\src\\main\\resources\\logs\\system.log" /> <!-- 로그 파일 저장위치 -->
		<param name="Append" value="true"/>
		<param name="DatePattern" value="yyyy-MM-dd"/> <!-- 로그 날짜 포맷 -->
      	<layout class="org.apache.log4j.PatternLayout">
      	
<!--       			<param name="ConversionPattern" value="[%d {HH:mm:ss}][%-5p][%F:%L] - %m%n"/>  로그 출력 포맷 -->
<!-- <!--       		<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss}] %m%n"/>  로그 출력 포맷 --> -->
<!--       	</layout> -->
      	<param name="ConversionPattern" 
			value="[%d{HH:mm:ss}][%-5p][%F:%L] - %m%n" />
		</layout>
	</appender>
	
<!-- 	log4jdbc-remix 로그 출력 appender -->
<!-- 	실행되는 query 문과 resultSet 결과 출력하는 appender -->
	<appender name="sqlLogger" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" 
			value="%-5p - %m%n" />
		</layout>
	</appender>
	
	<!-- query logger -->
	<logger name="jdbc.sqlonly" additivity="false">
		<level value="info" />
		<appender-ref ref="sqlLogger" />	
	</logger>
	
	<logger name="jdbc.resultsettable" additivity="false">
		<level value="info" />
		<appender-ref ref="sqlLogger" />	
	</logger>
	
	<!-- 
	%p : debug, info, warn, fatal 등의 priority(우선순위) 출력
	%m : 로그 메세지(messgae) 출력
	%n : new line, 줄바꿈(enter) 의미
	%d : datetime, 로깅 이벤트가 발생한 날짜와 시간을 출력
		포맷은 %d{} 의 형태로 지정함
		포맷은 %d{yyyy-MM-dd HH:mm:ss, SSS} 의 형태로 지정
		java.text.SimpleDateFormat 의 포맷을 사용하면 됨
	%t : 로그 이벤특 ㅏ발생된 스레드의 이름 출력
	%% : %문자 하나 출력
	%c, %C : 카테고리(category) 또는 클래스명(full class Name) 출력
		%c{2} 는 a, b, c 를 b.c만 출력 하라는 의미
		%c{1} 는 a.b.c 를 c 만 출력
	%F : 로그 이벤트가 발생한 프로그램 파일명 출력을 의미함
	%L : 로깅을 발생시킨 caller 의 줄번호 출력
	%I : 로깅을 발생시킨 caller 의 정보 출력
	%M : 로깅을 발생시킨 Method 이름 출력
	%r : 애플리케이션 시작부터 로깅을 발생한 시점까지의 시간 (milliseconds)
	%x : 로깅을 발생한 스레드와 관련된 NOC(Nested Diagnostic Context)
	%X : NDC 출력, %X{key} 형태로 출력
	 -->
	
	<!-- Application Loggers -->
	<logger name="com.test.first">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>	
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
		<appender-ref ref="fileLogger" />
	</root>
	
	</log4j:configuration>
